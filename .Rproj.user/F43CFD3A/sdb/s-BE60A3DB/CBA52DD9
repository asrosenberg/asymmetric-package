{
    "collab_server" : "",
    "contents" : "library(frontier)\nlibrary(data.table)\nlibrary(foreign)\nlibrary(quantreg)\nlibrary(npbr)\nlibrary(ggplot2)\nlibrary(countrycode)\nlibrary(RColorBrewer)\nlibrary(parallel)\nlibrary(Rglpk)\noptions(stringsAsFactors = FALSE)\nsource(\"~/Dropbox/Archive/unifying-study-asymmetric/functions.R\")\ncolors <- brewer.pal(7, \"Set1\")\n\n# Do Poly on KA\ndat <- read.csv(\"~/Dropbox/Archive/unifying-study-asymmetric/Data_IO_fs-QCA.csv\")\ndat <- read.csv(\"~/Dropbox/Ongoing_Projects/unifying-study-asymmetric/Data_IO_fs-QCA.csv\")\n\ncountryname <- dat$X\ny <- dat$Supranationalist.government\nx <- dat$Strong.regional.governance * dat$High.policy.conformity\ny <- 1 - y\nx <- 1 - x\nanalysis_dat <- data.frame(x, y, countryname)\nbw <- kern_smooth_bw(analysis_dat$x, analysis_dat$y, method=\"u\",\n                     technique=\"noh\", bw_method=\"bic\")\nkernsmooth <- kernel_smoothing(analysis_dat$x, analysis_dat$y, analysis_dat$x,\n                               h = bw)\n\nnboots <- 10000\n\nbs.est <- replicate(nboots, bs.routine(dta = analysis_dat))\nymatrix <- apply(bs.est, 2, sort)\n\ninterval_lines_y <- apply(ymatrix, 1, quantile, probs = c(0.1, 0.9))\nmean_y <- apply(ymatrix, 1, quantile, probs = 0.5)\n\n# par(mar=c(4,3,3,0), pty = \"s\")\n# plot(dat$Strong.regional.governance * dat$High.policy.conformity,\n#      dat$Supranationalist.government,\n#      main = \"Kernel Boundary Estimate for Koenig-Archibugi (2004)\",\n#      xlim = c(0,1),\n#      xlab = \"\",\n#      ylab = \"\",\n#      ylim = c(0,1), type = \"p\", pch = 19, col=\"gray\",\n#      xaxp = c(0, 1, 1), yaxp = c(0, 1, 1), cex.lab = 0.8, cex.axis = 0.8,\n#      cex = 1.5)\n\nxs <- with(dat, Strong.regional.governance*High.policy.conformity)\ndat$abbrv <- countrycode(as.character(dat$X), \"country.name\", \"iso3c\")\npar(mar=c(4,3,3,0), pty = \"s\")\nset.seed(2)\nplot(dat$Strong.regional.governance * dat$High.policy.conformity,\n     dat$Supranationalist.government,\n     main = \"Kernel Boundary Estimate for Koenig-Archibugi (2004)\",\n     xlim = c(0,1),\n     xlab = \"\",\n     ylab = \"\",\n     ylim = c(0,1), type = \"p\", pch = 19, col=\"#00000055\",\n     xaxp = c(0, 1, 1), yaxp = c(0, 1, 1), cex.lab = 0.8, cex.axis = 0.8,\n     cex = 1.5)\nwith(dat, text(jitter(Supranationalist.government, factor = 1) ~ xs,\n               labels = dat$abbrv, pos = 3, cex = 0.75))\nmtext(\"Support for Supranational CFSP\", side=2, line=1)\nmtext(\"Combination of Regional Governance and Policy Conformity\",\n      side=1, line=1)\npolygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),\n        c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),\n        col = alpha(\"grey30\", 0.25), border = NA)\npoints(x = sort(1 - analysis_dat$x), y = sort(1 - kernsmooth), type = \"l\",\n       lwd = 2, col = colors[1], lty = \"longdash\")\npoints(x = sort(1 - analysis_dat$x), y = sort(mean_y), type = \"l\",\n       lwd = 2, col = colors[2], lty = \"solid\")\nlegend.txt <- c(\"Kernel\", \"Kernel Boot (0.5)\")\nlegend('bottomright', legend.txt, lty=c(\"longdash\",\"solid\"),\n       col=c(colors[1], colors[2]), bty='n', cex=.75, lwd = 2)\n\n\n# AOC\n\n\n# Do QR on HW\n#Drew\ndat_gdp <-\n  read.csv(\"~/Dropbox/Archive/unifying-study-asymmetric/health_wealth/gdp_ppp.csv\",\n    stringsAsFactors = FALSE)\ndat_life <-\n  read.csv(\"~/Dropbox/Archive/unifying-study-asymmetric/health_wealth/life_expect.csv\",\n    stringsAsFactors = FALSE)\n\n# log GDP\ndat_gdp[, 2:217] <- log(dat_gdp[, 2:217])\n\ncolumnsgdp <- c(\"state\", paste(\"gdp\",seq(from = 1800, to = 2015), sep = \"_\"))\ncolumnslife <- c(\"state\", paste(\"life\",seq(from = 1800, to = 2015), sep = \"_\"))\ncolnames(dat_gdp) <- columnsgdp\ncolnames(dat_life) <- columnslife\ndat_life <- dat_life[,-1]\ndat <- data.frame(cbind(dat_gdp, dat_life))\ndat <- dat[complete.cases(dat),]\ngdps <- dat[2:217]\ndat <- melt(dat)\ndat$variable <- as.character(dat$variable)\nvariable <- do.call(rbind, strsplit(dat$variable, split =  \"_\"))[,1]\ndate <- do.call(rbind, strsplit(dat$variable, split =  \"_\"))[,2]\ndat$variable <- variable\ndat$date <- as.numeric(date)\ndat <- dcast(dat, state + date ~ variable)\nsetDT(dat)\nsetnames(dat, c(\"state\", \"year\", \"gdp\", \"life\"))\n\n# mydat <- data.frame(dat$gdp_1800, dat$life_1800)\n# #rm(dat, dat_life, dat_gdp, columnslife, columnsgdp)\n#\n# setnames(mydat, c(\"x\", \"y\"))\n# hw_qr <- rq(y ~ x, tau = 0.95, data = mydat)\n#\n# qr_reps <- replicate(5000, bs.routine_general(xtab = mydat$x,\n#   dta = mydat, method = \"QR\"))\n# ys <- apply(qr_reps, 2, sort)\n# interval_lines_y <- apply(ys, 1, quantile, probs = c(0.1, 0.9))\n#\n# plot(mydat$x, mydat$y, xlab = \"Log GDP/Cap, PPP\",\n#      ylab = \"Life Expectancy\",\n#      main = \"Health and Wealth in 1800\",\n#      pch = 19, col=\"#00000055\")\n# polygon(x = c(sort(mydat$x), rev(sort(mydat$x))),\n#         c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),\n#         col = alpha(\"grey30\", 0.25), border = NA)\n# abline(a = hw_qr$coefficients[1] , b = hw_qr$coefficients[2], col = colors[4],\n#        lty = \"dotted\", lwd = 2)\n\n\ndat_1810 <- dat[year ==1810]\nqr <- rq(life ~ gdp, tau = 0.95, data = dat_1800)\nplot(dat_1800$gdp, qr$fitted.values)\nplot(sort(gdps$gdp_1800), qr$fitted.values)\n\nqr_funct <- function(date, DT) {\n  #form <- formula(paste0(\"life_\", date, \" ~ gdp_\", date))\n  sub_dat <- DT[year == date]\n  qr <- rq(life ~ gdp, tau = 0.95, data = sub_dat)\n  qr$fitted\n}\nget_gdps <- function(date)\n{\n  sub_dat <- dat[year == date]\n  sub_dat$gdp\n}\ndates <- seq(from = 1810, to = 2015, by = 20)\nyrs20 <- seq(1, 215, by = 20)\ngdps <- as.data.table(sapply(dates, get_gdps))\nresults <- as.data.table(sapply(dates, qr_funct, DT = dat))\nsetnames(gdps, as.character(yrs20))\nsetnames(results, as.character(yrs20))\ngdps[[\"1810\"]]\npoints(gdps[[\"1810\"]], results[[\"1810\"]])\n# WE NEED BOOTSTRAPS FOR 1810, 1830, 1850, 1870, 1890, 1910, 1930, 1950, 1970,\n# 1990, 2010\n\nqr_20_years_bootstrap <- function(dat, date, nboots)\n{\n  boots <- function(dat, date){\n    dta <- dat[year == date]\n    idx <- sample(1:nrow(dta), nrow(dta), replace=TRUE)\n    sample.dta <- dta[idx,]\n    qr <- rq(life ~ gdp, tau = 0.95, data = sample.dta)\n    qr$coefficients[1] + dta[, gdp] * qr$coefficients[2]\n  }\n  reps <- apply(replicate(nboots, boots(dat, date)), 2, sort)\n  quantiles <- apply(reps, 1, quantile, probs = c(0.025, 0.975))\n  quantiles\n}\n\n#qr_20_years_bootstrap(dat = dat, date = 1810, nboots = 10)\ndates <- seq(from = 1810, to = 2010, by = 20)\nbootstraps <- lapply(dates, qr_20_years_bootstrap, dat = dat, nboots = 100)\nnames(bootstraps) <- seq(1, 215, by = 20)\n# Cool HW 20 yrs plot\n\n\n\nyrs20 <- seq(1, 215, by = 20)\npar(mar=c(2,2,0,0))\npar(mfrow=c(2,6), oma = c(0, 0, 2, 0))\nfor(i in seq(from = 1, to = 215, by = 20)){\n  plot(0, xlim=c(5,12), ylim=c(15,90), type = \"n\", xlab = \" \",\n       ylab = \" \", main = \" \", axes=FALSE)\n  axis(2, labels=FALSE, col=\"#88888888\")\n  if(i==1 | i==121){axis(2, labels=TRUE, col=\"#88888888\", col.axis=\"#88888888\")}\n  if(i>120){axis(1, labels=c(\"150\",\"1,500\",\"15,000\",\"150,000\"),\n    at=c(5.01,7.31,9.61,11.91), col=\"#88888888\", col.axis=\"#88888888\")}\n  points(dat[year == 1799 + i, gdp], dat[year == 1799 + i, life],\n    pch=\".\", col=\"#88888888\", cex = 2)\n  points(eval(parse(text = paste0(\"gdps[['\", i, \"']]\"))),\n    eval(parse(text = paste0(\"results[['\", i, \"']]\"))),\n    type = \"l\", col = \"black\", lwd = 1)\n  ylow <- eval(parse(text = paste0(\"bootstraps$`\", i, \"`\")))[1,]\n  yhigh <- eval(parse(text = paste0(\"bootstraps$`\", i, \"`\")))[2,]\n  polygon(x = c(sort(eval(parse(text = paste0(\"gdps[['\", i, \"']]\")))),\n    rev(sort(eval(parse(text = paste0(\"gdps[['\", i, \"']]\")))))), c(sort(ylow),\n    rev(sort(yhigh))), col = alpha(\"grey30\", 0.25), border = NA)\n  text(6,75, as.character(1809+i))\n}\nmtext(\"Life Expectancy vs. GDP Across Generations\", outer = TRUE, cex = 1.5)\nrange(gdps[[\"141\"]])\nrange(gdps[[\"201\"]])\nexp(10.9)\nView(cbind(gdps[[\"141\"]], results[[\"141\"]]))\n# try ggplot (not run)\ntest_data <- dat[year %in% dates]\npred_data <- dat[year %in% dates]\nbootstraps$`1`[1,]\nlows <- list()\nhighs <- list()\nfor(i in 1:11)\n{\n  lows[[i]] <- bootstraps[[i]][1,]\n  highs[[i]] <- bootstraps[[i]][2,]\n}\nnames(lows) <- dates\nnames(highs) <- dates\nlows <- stack(lows)\nhighs <- stack(highs)\nmerge(pred_data, lows, by.y = \"ind\", by.x = \"state\")\npred_data$ylow <- lows$values\npred_data$yhigh <- highs$values\nmelt(pred_data)\nggplot(test_data, aes(gdp, life)) + geom_point(colour = \"gray\") +\n  facet_wrap(~ year, nrow = 2, scales = \"fixed\") +\n  theme_bw() + geom_quantile(quantiles = 0.95, colour = \"black\") +\n  geom_ribbon(data = pred_data, aes(ymin = ylow, ymax = yhigh))\n\n\n# Do SFA on CGG\n",
    "created" : 1483810451745.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "570571754",
    "id" : "CBA52DD9",
    "lastKnownWriteTime" : 1483809991,
    "last_content_update" : 1483809991,
    "path" : "~/Dropbox/Archive/unifying-study-asymmetric/final_analysis_for_revision.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}