{
    "collab_server" : "",
    "contents" : "library(zoo)\nlibrary(frontier)\nlibrary(data.table)\nlibrary(foreign)\nlibrary(quantreg)\nlibrary(npbr)\nlibrary(ggplot2)\nlibrary(countrycode)\nlibrary(RColorBrewer)\nlibrary(Rglpk)\noptions(stringsAsFactors = FALSE)\nsource(\"~/Dropbox/Archive/unifying-study-asymmetric/functions.R\")\ncolors <- brewer.pal(7, \"Set1\")\n\n# test the AUC for fake data\nx <- 1:10\ny <- 3 * x + 25\nplot(x, y)\nid <- order(x)\nAUC <- sum(diff(x[id]) * rollmean(y[id], 2)) # 373.5, which is right!\n\n# great, it works\n# now let's try with KA example\n# for sufficient conditions, will need to keep in lower tri form\ndat <- read.csv(\"~/Dropbox/Archive/unifying-study-asymmetric/Data_IO_fs-QCA.csv\")\ncountryname <- dat$X\ny <- 1 - dat$Supranationalist.government\nx <- 1 - dat$Strong.regional.governance * dat$High.policy.conformity\nanalysis_dat <- data.frame(x, y, countryname)\nrm(dat)\nplot(x, y) # lower tri looks right\nka_qr <- rq(y ~ x, tau = 0.95) # change .05 to .95\nka_sfa <- sfa(y ~ x | x, ineffDecrease = TRUE) # change FALSE to TRUE\nodeg <- opt_degree(xtab = analysis_dat$x, ytab = analysis_dat$y, x = analysis_dat$x,\n  prange=1:20)\npolfront <- poly_estimate(analysis_dat$x, analysis_dat$y,\n  x = analysis_dat$x, deg = odeg)\nbw <- kern_smooth_bw(x, y, method=\"u\", technique=\"noh\", bw_method=\"bic\")\nkernsmooth <- kernel_smoothing(x, y, x, h = bw)\nka_ols <- lm(y ~ x, data = analysis_dat)\n\n\nplot(analysis_dat$x, analysis_dat$y)\n\n# find area under poly\npoints(x = sort(analysis_dat$x), y = sort(polfront), type = \"l\", lwd = 2,\n       col = colors[3], lty = \"longdash\")\nid <- order(analysis_dat$x)\nxmax <- max(analysis_dat$x)\nxmin <- min(analysis_dat$x)\nymax <- max(analysis_dat$y)\nymin <- min(analysis_dat$y)\ndivide_by_this <- (xmax-xmin)*(ymax-ymin)\nAUC <- sum(diff(analysis_dat$x[id]) * rollmean(sort(polfront), 2))\nAUC_poly <- AUC/divide_by_this\n\n#find area under kern smooth\npoints(x = sort(analysis_dat$x), y = sort(kernsmooth), type = \"l\",\n  lwd = 2, col = colors[1], lty = \"twodash\")\nAUC <- sum(diff(analysis_dat$x[id]) * rollmean(sort(kernsmooth), 2))\nAUC_kern <- AUC/divide_by_this\n\n# area under SFA, QR, OLS\nabline(a = ka_sfa$mleParam[1], b = ka_sfa$mleParam[2], col = colors[5],\n  lty = \"dotdash\", lwd = 2)\ny <- ka_sfa$mleParam[1] + ka_sfa$mleParam[2] * analysis_dat$x\nAUC <- sum(diff(analysis_dat$x[id]) * rollmean(sort(y), 2))\nAUC_sfa <- AUC/divide_by_this\nabline(a = ka_qr$coefficients[1] , b = ka_qr$coefficients[2], col = colors[4],\n  lty = \"dotted\", lwd = 2)\ny <- ka_qr$coefficients[1] + ka_qr$coefficients[2] * analysis_dat$x\nAUC <- sum(diff(analysis_dat$x[id]) * rollmean(sort(y), 2))\nAUC_qr <- AUC/divide_by_this\nabline(a = ka_ols$coefficients[1], b = ka_ols$coefficients[2], col = colors[7],\n  lty = 1, lwd = 2)\ny <- ka_ols$coefficients[1] + ka_ols$coefficients[2] * analysis_dat$x\nAUC <- sum(diff(analysis_dat$x[id]) * rollmean(sort(kernsmooth), 2))\nAUC_ols <- AUC/divide_by_this\n\nAUCs <- as.matrix(c(AUC_poly, AUC_kern, AUC_sfa, AUC_qr, AUC_ols))\nAUCs <- apply(AUCs, 1, round, digits = 3)\nresults <- data.table(Method = c(\"Polynomial\", \"Kernal\", \"SFA\", \"QR\", \"OLS\"),\n  AUC = AUCs)\nasciify(results)\n\n\n# Ok so the data needs to be called 'analysis.dat'\n# and the vars need to be x and y\n\n\n# KA AOC\nAH_AOC(dat = analysis_dat, method = c(\"Polynomial\", \"QR\", \"SFA\"),\n       print_style = \"ascii\", CI = TRUE, nboots = 10)\nAH_AOC(dat = analysis_dat, method = c(\"Kernel\"),\n       print_style = \"ascii\", CI = TRUE, nboots = 10)\nKA_AOC <- AH_AOC(dat = analysis_dat, method = c(\"Kernel\"),\n       print_style = \"R\", CI = TRUE, nboots = 100)\n1 - 0.725\n1 - 0.475\n1 - 0.719\n1 - 0.809\ntoLatex(KA_AOC)\n\n# Let's see if it works for health/wealth\ndat_gdp <- read.csv(\"~/Dropbox/Archive/unifying-study-asymmetric/health_wealth/gdp_ppp.csv\", stringsAsFactors = FALSE)\ndat_life <- read.csv(\"~/Dropbox/Archive/unifying-study-asymmetric/health_wealth/life_expect.csv\", stringsAsFactors = FALSE)\n\n\n# log GDP\ndat_gdp[, 2:217] <- log(dat_gdp[, 2:217])\n\ncolumnsgdp <- c(\"state\", paste(\"gdp\",seq(from = 1800, to = 2015), sep = \"_\"))\ncolumnslife <- c(\"state\", paste(\"life\",seq(from = 1800, to = 2015), sep = \"_\"))\ncolnames(dat_gdp) <- columnsgdp\ncolnames(dat_life) <- columnslife\ndat_life <- dat_life[,-1]\ndat <- data.frame(cbind(dat_gdp, dat_life))\ndat <- dat[complete.cases(dat),]\nm <- as.matrix(dat[2:217])\ndat <- melt(dat)\ndates <- seq(from = 1810, to = 2015, by = 20)\ndat$variable <- as.character(dat$variable)\nvariable <- do.call(rbind, strsplit(dat$variable, split =  \"_\"))[,1]\ndate <- do.call(rbind, strsplit(dat$variable, split =  \"_\"))[,2]\ndat$variable <- variable\ndat$date <- as.numeric(date)\ndat <- dcast(dat, state + date ~ variable)\nsetDT(dat)\nsetnames(dat, c(\"state\", \"year\", \"x\", \"y\"))\nsubset_hw_data <- function(date, dat)\n{\n  dta <- dat[year == date]\n  dta[, state := NULL]\n  dta[, year := NULL]\n}\nyears_data <- lapply(dates, subset_hw_data, dat = dat)\nanalysis_dat <- years_data[[11]]\n\nget_time_series_aocs <- function(DAT)\n{\n  analysis_dat <- DAT\n  AH_AOC(dat = analysis_dat, method = c(\"QR\"), input = analysis_dat$x,\n    output = analysis_dat$y, print_style = \"R\", CI = TRUE, nboots = 10)\n}\n\nts_aoc_hw <- lapply(years_data, get_time_series_aocs)\nts_aoc_hw_table <- do.call(rbind, ts_aoc_hw)\nts_aoc_hw_table[,1] <- dates\ncolnames(ts_aoc_hw_table) <- c(\"year\", \"AOC\", \"2.5%\", \"50%\", \"97.5%\")\nts_aoc_hw_table <- apply(ts_aoc_hw_table, 2, as.numeric)\nxtable(ts_aoc_hw_table)\n\n# let's get AOC over time\nall_years <- seq(1800, 2010, 1)\nall_years_data <- lapply(all_years, subset_hw_data, dat = dat)\nall_years_aoc <- lapply(all_years_data, get_time_series_aocs)\naoc_data_all_years <- do.call(rbind, all_years_aoc)\naoc_data_all_years$year <- all_years\naoc_data_all_years$AOC <- as.numeric(aoc_data_all_years$AOC)\naoc_data_all_years$year <- as.numeric(aoc_data_all_years$year)\naoc_data_all_years$above_2 <- ifelse(aoc_data_all_years$AOC >= 0.2, 1, 0)\naoc_data_all_years$pre1950 <- ifelse(aoc_data_all_years$year < 1950, 1, 0)\nsetDT(aoc_data_all_years)\naoc_data_all_years[, sum(above_2)/184]\naoc_data_all_years[, mean(AOC), by = pre1950]\nprop_table <- t(aoc_data_all_years[, sum(above_2)/184, by = pre1950])\nprop_table[1,] <- c(\"Before 1950\", \"After 1950\")\nxtable(prop_table)\nggplot(aoc_data_all_years, aes(x = year, y = AOC)) + geom_point() +\n  geom_smooth() + theme_bw() + geom_hline(yintercept = 0.2) +\n  ggtitle(\"How Asymmetric is Health and Wealth from 1800 to 2010?\")\n\n\n\n\n AH_AOC(dat = analysis_dat, method = c(\"QR\"),\n       print_style = \"R\", CI = FALSE)\n\n\n\n\n\nAOC_hw <- AH_AOC(dat = analysis_dat, method = c(\"QR\"),\n       print_style = \"R\", CI = TRUE, nboots = 1000)\ntoLatex(AOC_hw)\n\n# try by hand\nplot(analysis_dat$x, analysis_dat$y)\nbw <- kern_smooth_bw(analysis_dat$x, analysis_dat$y, method=\"u\",\n  technique=\"noh\", bw_method=\"bic\")\nkernsmooth <- kernel_smoothing(analysis_dat$x, analysis_dat$y, analysis_dat$x, h = bw)\nhw_qr <- rq(y ~ x, tau = 0.95, data = analysis_dat)\npoints(x = sort(analysis_dat$x), y = sort(kernsmooth), type = \"l\",\n       lwd = 2, col = colors[1], lty = \"twodash\")\nabline(a = hw_qr$coefficients[1] , b = hw_qr$coefficients[2], col = colors[4],\n       lty = \"dotted\", lwd = 2)\nid <- order(analysis_dat$x)\nxmax <- max(analysis_dat$x)\nxmin <- min(analysis_dat$x)\nymax <- max(analysis_dat$y)\nymin <- min(analysis_dat$y)\ndivide_by_this <- (xmax-xmin)*(ymax-ymin)\n\nAUC <- sum(diff(analysis_dat$x[id]) * rollmean(sort(kernsmooth), 2))\nAUC_kern <- 1 - (AUC/divide_by_this)\nhw_qr <- hw_qr$coefficients[1] + hw_qr$coefficients[2] * analysis_dat$x\nAUC <- sum(diff(analysis_dat$x[id]) * rollmean(sort(hw_qr), 2))\nAUC_kern <- 1 - (AUC/divide_by_this)\nlibrary(MESS)\nauc(x = sort(analysis_dat$x), y = sort(hw_qr), from = xmin, to = xmax)\nauc(x = sort(analysis_dat$x), y = sort(kernsmooth), from = xmin, to = xmax, type = \"spline\")\n\n# AUC boundary\nAUC_kern <- sum(diff(analysis_dat$x[id]) * rollmean(sort(kernsmooth), 2))\n\n# AUC of y = ymin from xmin to xmax\nAUC_lower <- sum(diff(analysis_dat$x[id]) * ymin)\n\n# subtract these AUCs\nAUC_difference <- AUC_kern - AUC_lower\n\n# divide by total area of region\nAUC_percent <- AUC_difference/divide_by_this\nkern_result <- 1 - AUC_percent\n\n# process to implement\nAUC_lower <- sum(diff(analysis_dat$x[id]) * ymin)\nAUC_difference <- AUC_kern - AUC_lower\nAUC_percent <- AUC_difference/divide_by_this\nkern_result <- 1 - AUC_percent\n",
    "created" : 1483796873329.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3165692192",
    "id" : "1098DAD0",
    "lastKnownWriteTime" : 1483812854,
    "last_content_update" : 1483812854892,
    "path" : "~/Dropbox/Archive/unifying-study-asymmetric/AUC_test.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}