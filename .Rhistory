legend('topleft', legend.txt,
lty=c("twodash", "dotted", "dotdash", "solid"),
col=c(colors[1], colors[4],colors[5], colors[7]),
bty='n', cex=.75, lwd = 2)
# AOC on simulated data (Table 2)
AOC_fd <- AH_AOC(dat = analysis_dat, input = analysis_dat$x,
output = analysis_dat$y, method = c("Kernel", "QR", "SFA"), print_style = "R",
CI = TRUE, nboots = 5000)
QR, SFA, poly
qr_fake <- rq(y ~ x, tau = 0.95)
sfa_fake <- sfa(y ~ x | x, ineffDecrease = TRUE)
ols_fake <- lm(y ~ x)
bw <- kern_smooth_bw(x, y, method="u", technique="noh", bw_method="bic")
kernsmooth <- kernel_smoothing(x, y, y, h = bw)
par(mar=c(4,3,3,0), pty = "s")
plot(x, y, main = "Comparison of Each Technique on Simulated Asymmetric Data",
xlim = c(0,1), xlab = "", ylab = "", ylim = c(0,1), type = "p", pch = 19,
col="gray", xaxp = c(0, 1, 1), yaxp = c(0, 1, 1), cex.lab = 0.8,
cex.axis = 0.8, cex = 1.5)
abline(a = qr_fake$coefficients[1] , b = qr_fake$coefficients[2], col = colors[4],
lty = "dotted", lwd = 2)
abline(a = sfa_fake$mleParam[1], b = sfa_fake$mleParam[2], col = colors[5],
lty = "dotdash", lwd = 2)
points(x = sort(x), y = sort(kernsmooth), type = "l", lwd = 2,
col = colors[1], lty = "twodash")
abline(a = ols_fake$coefficients[1], b = ols_fake$coefficients[2], col = colors[7],
lty = 1, lwd = 2)
legend.txt <- c("Kernel", "QR (.95)", "SFA", "OLS")
legend('topleft', legend.txt,
lty=c("twodash", "dotted", "dotdash", "solid"),
col=c(colors[1], colors[4],colors[5], colors[7]),
bty='n', cex=.75, lwd = 2)
library(asymmetric)
colors <- brewer.pal(7, "Set1")
# Make fake asymmetric data
x <- runif(75, min = 0, max = 1)
y <- 1/2*x^(1/2)*runif(75, min = 0, max = 2)
analysis_dat <- data.frame(x = x, y = y)
plot(x, y)
# QR, SFA, poly
qr_fake <- rq(y ~ x, tau = 0.95)
sfa_fake <- sfa(y ~ x | x, ineffDecrease = TRUE)
ols_fake <- lm(y ~ x)
bw <- kern_smooth_bw(x, y, method="u", technique="noh", bw_method="bic")
kernsmooth <- kernel_smoothing(x, y, y, h = bw)
par(mar=c(4,3,3,0), pty = "s")
plot(x, y, main = "Comparison of Each Technique on Simulated Asymmetric Data",
xlim = c(0,1), xlab = "", ylab = "", ylim = c(0,1), type = "p", pch = 19,
col="gray", xaxp = c(0, 1, 1), yaxp = c(0, 1, 1), cex.lab = 0.8,
cex.axis = 0.8, cex = 1.5)
abline(a = qr_fake$coefficients[1] , b = qr_fake$coefficients[2], col = colors[4],
lty = "dotted", lwd = 2)
abline(a = sfa_fake$mleParam[1], b = sfa_fake$mleParam[2], col = colors[5],
lty = "dotdash", lwd = 2)
points(x = sort(x), y = sort(kernsmooth), type = "l", lwd = 2,
col = colors[1], lty = "twodash")
abline(a = ols_fake$coefficients[1], b = ols_fake$coefficients[2], col = colors[7],
lty = 1, lwd = 2)
legend.txt <- c("Kernel", "QR (.95)", "SFA", "OLS")
legend('topleft', legend.txt,
lty=c("twodash", "dotted", "dotdash", "solid"),
col=c(colors[1], colors[4],colors[5], colors[7]),
bty='n', cex=.75, lwd = 2)
library(asymmetric)
dat <- load_dataset("KA_data")
countryname <- dat$X
y <- dat$Supranationalist.government
x <- dat$Strong.regional.governance * dat$High.policy.conformity
y <- 1 - y
x <- 1 - x
analysis_dat <- data.frame(x, y, countryname)
bw <- kern_smooth_bw(analysis_dat$x, analysis_dat$y, method="u",
technique="noh", bw_method="bic")
kernsmooth <- kernel_smoothing(analysis_dat$x, analysis_dat$y, analysis_dat$x,
h = bw)
nboots <- 10000
bs.est <- replicate(nboots, bs.routine(dta = analysis_dat))
nboots <- 1
bs.est <- replicate(nboots, bs.routine(dta = analysis_dat))
ymatrix <- apply(bs.est, 2, sort)
interval_lines_y <- apply(ymatrix, 1, quantile, probs = c(0.1, 0.9))
mean_y <- apply(ymatrix, 1, quantile, probs = 0.5)
xs <- with(dat, Strong.regional.governance*High.policy.conformity)
dat$abbrv <- countrycode(as.character(dat$X), "country.name", "iso3c")
par(mar=c(4,3,3,0), pty = "s")
set.seed(2)
plot(dat$Strong.regional.governance * dat$High.policy.conformity,
dat$Supranationalist.government,
main = "Kernel Boundary Estimate for Koenig-Archibugi (2004)",
xlim = c(0,1), xlab = "", ylab = "", ylim = c(0,1), type = "p", pch = 19,
col="#00000055", xaxp = c(0, 1, 1), yaxp = c(0, 1, 1), cex.lab = 0.8,
cex.axis = 0.8, cex = 1.5)
with(dat, text(jitter(Supranationalist.government, factor = 1) ~ xs,
labels = dat$abbrv, pos = 3, cex = 0.75))
mtext("Support for Supranational CFSP", side=2, line=1)
mtext("Combination of Regional Governance and Policy Conformity",
side=1, line=1)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = alpha("grey30", 0.25), border = NA)
points(x = sort(1 - analysis_dat$x), y = sort(1 - kernsmooth), type = "l",
lwd = 2, col = colors[1], lty = "longdash")
points(x = sort(1 - analysis_dat$x), y = sort(mean_y), type = "l",
lwd = 2, col = colors[2], lty = "solid")
legend.txt <- c("Kernel", "Kernel Boot (0.5)")
legend('bottomright', legend.txt, lty=c("longdash","solid"),
col=c(colors[1], colors[2]), bty='n', cex=.75, lwd = 2)
# AOC for Koenig-Archibugi example (Table 3)
KA_AOC <- AH_AOC(dat = analysis_dat, input = analysis_dat$x,
output = analysis_dat$y, method = "Kernel", print_style = "R", CI = TRUE,
nboots = 5000)
KA_AOC <- AH_AOC(dat = analysis_dat, input = analysis_dat$x,
output = analysis_dat$y, method = "Kernel", print_style = "R", CI = TRUE,
nboots = 5)
toLatex(KA_AOC)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = alpha("grey30", 0.25), border = NA)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = alpha("grey30", 0.25), border = NA)
?alpha
??alpha
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = alpha("grey30", 0.25), border = NA)
library(asymmetric)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = alpha("grey30", 0.25), border = NA)
library(asymmetric)
dat <- load_dataset("KA_data")
countryname <- dat$X
y <- dat$Supranationalist.government
x <- dat$Strong.regional.governance * dat$High.policy.conformity
y <- 1 - y
x <- 1 - x
analysis_dat <- data.frame(x, y, countryname)
bw <- kern_smooth_bw(analysis_dat$x, analysis_dat$y, method="u",
technique="noh", bw_method="bic")
kernsmooth <- kernel_smoothing(analysis_dat$x, analysis_dat$y, analysis_dat$x,
h = bw)
nboots <- 1
bs.est <- replicate(nboots, bs.routine(dta = analysis_dat))
ymatrix <- apply(bs.est, 2, sort)
interval_lines_y <- apply(ymatrix, 1, quantile, probs = c(0.1, 0.9))
mean_y <- apply(ymatrix, 1, quantile, probs = 0.5)
xs <- with(dat, Strong.regional.governance*High.policy.conformity)
dat$abbrv <- countrycode(as.character(dat$X), "country.name", "iso3c")
par(mar=c(4,3,3,0), pty = "s")
set.seed(2)
plot(dat$Strong.regional.governance * dat$High.policy.conformity,
dat$Supranationalist.government,
main = "Kernel Boundary Estimate for Koenig-Archibugi (2004)",
xlim = c(0,1), xlab = "", ylab = "", ylim = c(0,1), type = "p", pch = 19,
col="#00000055", xaxp = c(0, 1, 1), yaxp = c(0, 1, 1), cex.lab = 0.8,
cex.axis = 0.8, cex = 1.5)
with(dat, text(jitter(Supranationalist.government, factor = 1) ~ xs,
labels = dat$abbrv, pos = 3, cex = 0.75))
mtext("Support for Supranational CFSP", side=2, line=1)
mtext("Combination of Regional Governance and Policy Conformity",
side=1, line=1)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = alpha("grey30", 0.25), border = NA)
points(x = sort(1 - analysis_dat$x), y = sort(1 - kernsmooth), type = "l",
lwd = 2, col = colors[1], lty = "longdash")
points(x = sort(1 - analysis_dat$x), y = sort(1 - kernsmooth), type = "l",
lwd = 2, col = colors[1], lty = "longdash")
points(x = sort(1 - analysis_dat$x), y = sort(mean_y), type = "l",
lwd = 2, col = colors[2], lty = "solid")
legend.txt <- c("Kernel", "Kernel Boot (0.5)")
legend('bottomright', legend.txt, lty=c("longdash","solid"),
col=c(colors[1], colors[2]), bty='n', cex=.75, lwd = 2)
KA_AOC <- AH_AOC(dat = analysis_dat, input = analysis_dat$x,
output = analysis_dat$y, method = "Kernel", print_style = "R", CI = TRUE,
nboots = 5)
toLatex(KA_AOC)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = "grey30", border = NA)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = "grey30", border = NA)
interval_lines_y
dat <- load_dataset("KA_data")
countryname <- dat$X
y <- dat$Supranationalist.government
x <- dat$Strong.regional.governance * dat$High.policy.conformity
y <- 1 - y
x <- 1 - x
analysis_dat <- data.frame(x, y, countryname)
bw <- kern_smooth_bw(analysis_dat$x, analysis_dat$y, method="u",
technique="noh", bw_method="bic")
kernsmooth <- kernel_smoothing(analysis_dat$x, analysis_dat$y, analysis_dat$x,
h = bw)
nboots <- 10
bs.est <- replicate(nboots, bs.routine(dta = analysis_dat))
ymatrix <- apply(bs.est, 2, sort)
interval_lines_y <- apply(ymatrix, 1, quantile, probs = c(0.1, 0.9))
mean_y <- apply(ymatrix, 1, quantile, probs = 0.5)
xs <- with(dat, Strong.regional.governance*High.policy.conformity)
dat$abbrv <- countrycode(as.character(dat$X), "country.name", "iso3c")
par(mar=c(4,3,3,0), pty = "s")
set.seed(2)
plot(dat$Strong.regional.governance * dat$High.policy.conformity,
dat$Supranationalist.government,
main = "Kernel Boundary Estimate for Koenig-Archibugi (2004)",
xlim = c(0,1), xlab = "", ylab = "", ylim = c(0,1), type = "p", pch = 19,
col="#00000055", xaxp = c(0, 1, 1), yaxp = c(0, 1, 1), cex.lab = 0.8,
cex.axis = 0.8, cex = 1.5)
with(dat, text(jitter(Supranationalist.government, factor = 1) ~ xs,
labels = dat$abbrv, pos = 3, cex = 0.75))
mtext("Support for Supranational CFSP", side=2, line=1)
mtext("Combination of Regional Governance and Policy Conformity",
side=1, line=1)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = alpha("grey30", 0.25), border = NA)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = "grey30", border = NA)
points(x = sort(1 - analysis_dat$x), y = sort(1 - kernsmooth), type = "l",
lwd = 2, col = colors[1], lty = "longdash")
points(x = sort(1 - analysis_dat$x), y = sort(mean_y), type = "l",
lwd = 2, col = colors[2], lty = "solid")
legend.txt <- c("Kernel", "Kernel Boot (0.5)")
legend('bottomright', legend.txt, lty=c("longdash","solid"),
col=c(colors[1], colors[2]), bty='n', cex=.75, lwd = 2
plot(dat$Strong.regional.governance * dat$High.policy.conformity,
dat$Supranationalist.government,
main = "Kernel Boundary Estimate for Koenig-Archibugi (2004)",
xlim = c(0,1), xlab = "", ylab = "", ylim = c(0,1), type = "p", pch = 19,
col="#00000055", xaxp = c(0, 1, 1), yaxp = c(0, 1, 1), cex.lab = 0.8,
cex.axis = 0.8, cex = 1.5)
with(dat, text(jitter(Supranationalist.government, factor = 1) ~ xs,
labels = dat$abbrv, pos = 3, cex = 0.75))
mtext("Support for Supranational CFSP", side=2, line=1)
mtext("Combination of Regional Governance and Policy Conformity",
side=1, line=1)
polygon(x = c(sort(1 - analysis_dat$x), rev(sort(1 - analysis_dat$x))),
c(sort(interval_lines_y[1, ]), rev(sort(interval_lines_y[2, ]))),
col = "grey87", border = NA)
points(x = sort(1 - analysis_dat$x), y = sort(1 - kernsmooth), type = "l",
lwd = 2, col = colors[1], lty = "longdash")
points(x = sort(1 - analysis_dat$x), y = sort(mean_y), type = "l",
lwd = 2, col = colors[2], lty = "solid")
legend.txt <- c("Kernel", "Kernel Boot (0.5)")
legend('bottomright', legend.txt, lty=c("longdash","solid"),
col=c(colors[1], colors[2]), bty='n', cex=.75, lwd = 2)
library(asymmetric)
colors <- brewer.pal(7, "Set1")
# Make fake asymmetric data
x <- runif(75, min = 0, max = 1)
y <- 1/2*x^(1/2)*runif(75, min = 0, max = 2)
analysis_dat <- data.frame(x = x, y = y)
plot(x, y)
# QR, SFA, poly
qr_fake <- rq(y ~ x, tau = 0.95)
sfa_fake <- sfa(y ~ x | x, ineffDecrease = TRUE)
ols_fake <- lm(y ~ x)
bw <- kern_smooth_bw(x, y, method="u", technique="noh", bw_method="bic")
kernsmooth <- kernel_smoothing(x, y, y, h = bw)
par(mar=c(4,3,3,0), pty = "s")
plot(x, y, main = "Comparison of Each Technique on Simulated Asymmetric Data",
xlim = c(0,1), xlab = "", ylab = "", ylim = c(0,1), type = "p", pch = 19,
col="gray", xaxp = c(0, 1, 1), yaxp = c(0, 1, 1), cex.lab = 0.8,
cex.axis = 0.8, cex = 1.5)
abline(a = qr_fake$coefficients[1] , b = qr_fake$coefficients[2], col = colors[4],
lty = "dotted", lwd = 2)
abline(a = sfa_fake$mleParam[1], b = sfa_fake$mleParam[2], col = colors[5],
lty = "dotdash", lwd = 2)
points(x = sort(x), y = sort(kernsmooth), type = "l", lwd = 2,
col = colors[1], lty = "twodash")
abline(a = ols_fake$coefficients[1], b = ols_fake$coefficients[2], col = colors[7],
lty = 1, lwd = 2)
legend.txt <- c("Kernel", "QR (.95)", "SFA", "OLS")
legend('topleft', legend.txt,
lty=c("twodash", "dotted", "dotdash", "solid"),
col=c(colors[1], colors[4],colors[5], colors[7]),
bty='n', cex=.75, lwd = 2)
dat_gdp <- load_dataset("gdp_ppp")
dat_life <- load_dataset("life_expect")
# log GDP
dat_gdp[, 2:217] <- log(dat_gdp[, 2:217])
columnsgdp <- c("state", paste("gdp",seq(from = 1800, to = 2015), sep = "_"))
columnslife <- c("state", paste("life",seq(from = 1800, to = 2015), sep = "_"))
colnames(dat_gdp) <- columnsgdp
colnames(dat_life) <- columnslife
dat_life <- dat_life[,-1]
dat <- data.frame(cbind(dat_gdp, dat_life))
dat <- dat[complete.cases(dat),]
m <- as.matrix(dat[2:217])
dat <- melt(dat)
dates <- seq(from = 1810, to = 2015, by = 20)
dat$variable <- as.character(dat$variable)
variable <- do.call(rbind, strsplit(dat$variable, split =  "_"))[,1]
date <- do.call(rbind, strsplit(dat$variable, split =  "_"))[,2]
dat$variable <- variable
dat$date <- as.numeric(date)
dat <- dcast(dat, state + date ~ variable)
setDT(dat)
setnames(dat, c("state", "year", "x", "y"))
subset_hw_data <- function(date, dat)
{
dta <- dat[year == date]
dta[, state := NULL]
dta[, year := NULL]
}
years_data <- lapply(dates, subset_hw_data, dat = dat)
analysis_dat <- years_data[[11]]
get_time_series_aocs <- function(DAT)
{
analysis_dat <- DAT
AH_AOC(dat = analysis_dat, method = c("QR"), input = analysis_dat$x,
output = analysis_dat$y, print_style = "R", CI = TRUE, nboots = 5)
}
ts_aoc_hw <- lapply(years_data, get_time_series_aocs)
ts_aoc_hw_table <- do.call(rbind, ts_aoc_hw)
ts_aoc_hw_table[,1] <- dates
colnames(ts_aoc_hw_table) <- c("year", "AOC", "2.5%", "50%", "97.5%")
ts_aoc_hw_table <- apply(ts_aoc_hw_table, 2, as.numeric)
xtable(ts_aoc_hw_table)
ggplot(aoc_data_all_years, aes(x = year, y = AOC)) + geom_point() +
geom_smooth() + theme_bw() + geom_hline(yintercept = 0.2) +
ggtitle("How Asymmetric is Health and Wealth from 1800 to 2010?")
xtable(ts_aoc_hw_table)
ggplot(aoc_data_all_years, aes(x = year, y = AOC)) + geom_point() +
geom_smooth() + theme_bw() + geom_hline(yintercept = 0.2) +
ggtitle("How Asymmetric is Health and Wealth from 1800 to 2010?")
library(asymmetric)
library(asymmetric)
dat_gdp <- load_dataset("gdp_ppp")
dat_life <- load_dataset("life_expect")
# log GDP
dat_gdp[, 2:217] <- log(dat_gdp[, 2:217])
columnsgdp <- c("state", paste("gdp",seq(from = 1800, to = 2015), sep = "_"))
columnslife <- c("state", paste("life",seq(from = 1800, to = 2015), sep = "_"))
colnames(dat_gdp) <- columnsgdp
colnames(dat_life) <- columnslife
dat_life <- dat_life[,-1]
dat <- data.frame(cbind(dat_gdp, dat_life))
dat <- dat[complete.cases(dat),]
m <- as.matrix(dat[2:217])
dat <- melt(dat)
dates <- seq(from = 1810, to = 2015, by = 20)
dat$variable <- as.character(dat$variable)
variable <- do.call(rbind, strsplit(dat$variable, split =  "_"))[,1]
date <- do.call(rbind, strsplit(dat$variable, split =  "_"))[,2]
dat$variable <- variable
dat$date <- as.numeric(date)
dat <- dcast(dat, state + date ~ variable)
setDT(dat)
setnames(dat, c("state", "year", "x", "y"))
subset_hw_data <- function(date, dat)
{
dta <- dat[year == date]
dta[, state := NULL]
dta[, year := NULL]
}
years_data <- lapply(dates, subset_hw_data, dat = dat)
analysis_dat <- years_data[[11]]
get_time_series_aocs <- function(DAT)
{
analysis_dat <- DAT
AH_AOC(dat = analysis_dat, method = c("QR"), input = analysis_dat$x,
output = analysis_dat$y, print_style = "R", CI = TRUE, nboots = 5000)
}
ts_aoc_hw <- lapply(years_data, get_time_series_aocs)
library(asymmetric)
dat_gdp <- load_dataset("gdp_ppp")
dat_life <- load_dataset("life_expect")
# log GDP
dat_gdp[, 2:217] <- log(dat_gdp[, 2:217])
columnsgdp <- c("state", paste("gdp",seq(from = 1800, to = 2015), sep = "_"))
columnslife <- c("state", paste("life",seq(from = 1800, to = 2015), sep = "_"))
colnames(dat_gdp) <- columnsgdp
colnames(dat_life) <- columnslife
dat_life <- dat_life[,-1]
dat <- data.frame(cbind(dat_gdp, dat_life))
dat <- dat[complete.cases(dat),]
m <- as.matrix(dat[2:217])
dat <- melt(dat)
dates <- seq(from = 1810, to = 2015, by = 20)
dat$variable <- as.character(dat$variable)
variable <- do.call(rbind, strsplit(dat$variable, split =  "_"))[,1]
date <- do.call(rbind, strsplit(dat$variable, split =  "_"))[,2]
dat$variable <- variable
dat$date <- as.numeric(date)
dat <- dcast(dat, state + date ~ variable)
setDT(dat)
setnames(dat, c("state", "year", "x", "y"))
subset_hw_data <- function(date, dat)
{
dta <- dat[year == date]
dta[, state := NULL]
dta[, year := NULL]
}
years_data <- lapply(dates, subset_hw_data, dat = dat)
analysis_dat <- years_data[[11]]
get_time_series_aocs <- function(DAT)
{
analysis_dat <- DAT
AH_AOC(dat = analysis_dat, method = c("QR"), input = analysis_dat$x,
output = analysis_dat$y, print_style = "R", CI = TRUE, nboots = 5)
}
ts_aoc_hw <- lapply(years_data, get_time_series_aocs)
ts_aoc_hw_table <- do.call(rbind, ts_aoc_hw)
ts_aoc_hw_table[,1] <- dates
colnames(ts_aoc_hw_table) <- c("year", "AOC", "2.5%", "50%", "97.5%")
ts_aoc_hw_table <- apply(ts_aoc_hw_table, 2, as.numeric)
xtable(ts_aoc_hw_table)
all_years <- seq(1800, 2010, 1)
all_years_data <- lapply(all_years, subset_hw_data, dat = dat)
all_years_aoc <- lapply(all_years_data, get_time_series_aocs)
aoc_data_all_years <- do.call(rbind, all_years_aoc)
aoc_data_all_years$year <- all_years
aoc_data_all_years$AOC <- as.numeric(aoc_data_all_years$AOC)
aoc_data_all_years$year <- as.numeric(aoc_data_all_years$year)
aoc_data_all_years$above_2 <- ifelse(aoc_data_all_years$AOC >= 0.2, 1, 0)
aoc_data_all_years$pre1950 <- ifelse(aoc_data_all_years$year < 1950, 1, 0)
setDT(aoc_data_all_years)
aoc_data_all_years[, sum(above_2)/184]
aoc_data_all_years[, mean(AOC), by = pre1950]
prop_table <- t(aoc_data_all_years[, sum(above_2)/184, by = pre1950])
prop_table[1,] <- c("Before 1950", "After 1950")
xtable(prop_table)
xtable(prop_table, digits = 3)
toLatex(prop_table, digits = 3)
ggplot(aoc_data_all_years, aes(x = year, y = AOC)) + geom_point() +
geom_smooth() + theme_bw() + geom_hline(yintercept = 0.2) +
ggtitle("How Asymmetric is Health and Wealth from 1800 to 2010?")
library(asymmetric)
library(devtools)
document()
build()
install()
library(asymmetric)
dat_gdp <- load_dataset("gdp_ppp")
dat_life <- load_dataset("life_expect")
# log GDP
dat_gdp[, 2:217] <- log(dat_gdp[, 2:217])
columnsgdp <- c("state", paste("gdp",seq(from = 1800, to = 2015), sep = "_"))
columnslife <- c("state", paste("life",seq(from = 1800, to = 2015), sep = "_"))
colnames(dat_gdp) <- columnsgdp
colnames(dat_life) <- columnslife
dat_life <- dat_life[,-1]
dat <- data.frame(cbind(dat_gdp, dat_life))
dat <- dat[complete.cases(dat),]
m <- as.matrix(dat[2:217])
dat <- melt(dat)
dates <- seq(from = 1810, to = 2015, by = 20)
dat$variable <- as.character(dat$variable)
variable <- do.call(rbind, strsplit(dat$variable, split =  "_"))[,1]
date <- do.call(rbind, strsplit(dat$variable, split =  "_"))[,2]
dat$variable <- variable
dat$date <- as.numeric(date)
dat <- dcast(dat, state + date ~ variable)
setDT(dat)
setnames(dat, c("state", "year", "x", "y"))
subset_hw_data <- function(date, dat)
{
dta <- dat[year == date]
dta[, state := NULL]
dta[, year := NULL]
}
years_data <- lapply(dates, subset_hw_data, dat = dat)
analysis_dat <- years_data[[11]]
get_time_series_aocs <- function(DAT)
{
analysis_dat <- DAT
AH_AOC(dat = analysis_dat, method = c("QR"), input = analysis_dat$x,
output = analysis_dat$y, print_style = "R", CI = TRUE, nboots = 5)
}
ts_aoc_hw <- lapply(years_data, get_time_series_aocs)
ts_aoc_hw_table <- do.call(rbind, ts_aoc_hw)
ts_aoc_hw_table[,1] <- dates
##############
# Table 4
##############
colnames(ts_aoc_hw_table) <- c("year", "AOC", "2.5%", "50%", "97.5%")
ts_aoc_hw_table <- apply(ts_aoc_hw_table, 2, as.numeric)
xtable(ts_aoc_hw_table)
# Get AOC over time
all_years <- seq(1800, 2010, 1)
all_years_data <- lapply(all_years, subset_hw_data, dat = dat)
all_years_aoc <- lapply(all_years_data, get_time_series_aocs)
aoc_data_all_years <- do.call(rbind, all_years_aoc)
aoc_data_all_years$year <- all_years
aoc_data_all_years$AOC <- as.numeric(aoc_data_all_years$AOC)
aoc_data_all_years$year <- as.numeric(aoc_data_all_years$year)
aoc_data_all_years$above_2 <- ifelse(aoc_data_all_years$AOC >= 0.2, 1, 0)
aoc_data_all_years$pre1950 <- ifelse(aoc_data_all_years$year < 1950, 1, 0)
setDT(aoc_data_all_years)
aoc_data_all_years[, sum(above_2)/184]
aoc_data_all_years[, mean(AOC), by = pre1950]
prop_table <- t(aoc_data_all_years[, sum(above_2)/184, by = pre1950])
prop_table[1,] <- c("Before 1950", "After 1950")
##########
# Table 5
##########
toLatex(prop_table, digits = 3)
##########
# Figure 4
##########
ggplot(aoc_data_all_years, aes(x = year, y = AOC)) + geom_point() +
geom_smooth() + theme_bw() + geom_hline(yintercept = 0.2) +
ggtitle("How Asymmetric is Health and Wealth from 1800 to 2010?")
library(asymmetric)
library(asymmetric)
library(asymmetric)
library(asymmetric)
